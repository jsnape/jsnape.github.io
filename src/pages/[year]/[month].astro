---
import { ITEMS_PER_PAGE } from '@/consts';
import SidebarLayout from "@/layouts/SidebarLayout.astro";
import { getCollection } from "astro:content";
import BlogPostArticle from "@components/BlogPostArticle.astro";
import {excludeDrafts, sortBlogPosts} from "@/functions";

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  
  const dates = [...new Set(posts.map((p) => {
        const date = p.data.postDate;
        const year = date.getFullYear();
        const month = date.getMonth(); // no need to add 1 here, because getMonth() is zero-based
        return new Date(year, month, 1); // returns a date object representing the first day of the month
    }))];
  return dates.map(d => ({
    params: {
        year: d.getFullYear(),
        month: d.getMonth() < 10 ? '0' + (1 + d.getMonth()) : (1 + d.getMonth())
        },
  }));  
}

const { year, month } = Astro.params;
const posts = await getCollection('posts',
    ({id, slug, body, collection, data}) => 
    data.postDate.getFullYear() == year && (data.postDate.getMonth() + 1) == month && excludeDrafts(data))
  .then(sortBlogPosts);

const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
const monthName = monthNames[parseInt(String(month)) - 1]; // convert month to string before passing it as an argument
const pageTitle = "Monthly Archives: " + monthName + " " + year;
---

<SidebarLayout pageTitle={pageTitle}>
	<ul class="divide-y divide-gray-200 dark:divide-gray-700">
		{!posts.length && 'No posts found.'}
		{posts.slice(0, ITEMS_PER_PAGE).map((post) => <li><BlogPostArticle post={post} homepage={true}/></li>)}
		
	</ul>
</SidebarLayout>
