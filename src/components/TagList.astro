---
import { getCollection } from "astro:content";

// function to lookup a font size based on a count
function lookupFontSize(count: number) {
  const sizes = ["0px", "7pt", "10pt", "12pt", "16pt", "18pt", "20pt", "22pt", "24pt"];

  if (count >= sizes.length) {
    count = sizes.length - 1;
  }

  return sizes[count];
}

type TagCount = {
  tag: string;
  count: number;
}

const posts = await getCollection("posts");
// map into a list of tags with the count of each tag
const tags = posts
  .flatMap((post) => post.data.tags)
  .reduce((acc:TagCount[], tag) => {
    const existing = acc.find((t) => t.tag === tag);
    if (existing) {
      existing.count++;
    } else {
      acc.push({ tag, count: 1 });
    }
    return acc;
  }, [])
  // add proprty by mapping count to a font size
  .map((tag) => ({ ...tag, fontSize: lookupFontSize(tag.count) }))
  .sort((a, b) => a.tag.localeCompare(b.tag));

---
<div class="space-x-6 my-5 uppercase">Tags</div>
<ul class="inline-block">
{tags.map((tag) =>
    <span style={`font-size:${tag.fontSize}`}>
      <li class="inline-block"><a href={`/tag/${tag.tag}`} title={`${tag.tag} (${tag.count} items)`}>{`${tag.tag}`}</a></li>
    </span>  
)}
</ul>
